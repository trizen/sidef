#!/usr/bin/ruby

# Tests for the Number `is_omega_prime(n,k)` method.

# Timings:
#   17 feb 2023: 9.713s +/- 0.4
#   23 feb 2023: 8.970s
#   13 jul 2023: 3.088s
#   15 sep 2023: 3.904s (after adding a few more tests)
#   23 sep 2023: 3.118s

#~ Num!USE_CONJECTURES = true

func A219019(n) {
    for k in (1..Inf) {
        var v = (k**n - 1)
        v.is_omega_prime(n) || next
        return k
    }
}

assert_eq(
    A219019.map(1..12),
    %n[3, 4, 7, 8, 16, 11, 79, 44, 81, 91, 1024, 47],
)

assert_eq(A219019(14), 389)
assert_eq(A219019(15), 256)
assert_eq(A219019(16), 413)
assert_eq(A219019(18), 373)
assert_eq(A219019(20), 1000)
assert_eq(A219019(21), 4096)
assert_eq(A219019(24), 563)

func A219018(n) {
    for k in (1..Inf) {
        var v = (k**n + 1)
        v.is_omega_prime(n) || next
        return k
    }
}

assert_eq(
    A219018.map(1..12),
    %n[1, 3, 5, 43, 17, 47, 51, 1697, 59, 512, 521, 3255],
)

assert_eq(A219018(15), 656)

func A281940(n) {
    for k in (1..Inf) {
        var v = (k**n + 1)
        v.is_prob_squarefree(1e3) || next
        v.is_omega_prime(n) || next
        v.is_squarefree || next
        return k
    }
}

assert_eq(
    A281940.map(1..12),
    %n[1, 3, 9, 43, 46, 47, 245, 1697, 109, 565, 3938, 3255]
)

func A358862(n) {
    for k in (1..Inf) {
        var v = polygonal(k, n)
        if (v.is_omega_prime(n)) {
            return v
        }
    }
}

assert_eq(A358862.map(3..8), %n[66, 44100, 11310, 103740, 3333330, 185040240])

func A358864(n) {
    for k in (1..Inf) {
        var v = pyramidal(k, n)
        if (v.is_omega_prime(n)) {
            return v
        }
    }
}

assert_eq(A358864.map(3..11), %n[84, 1785, 299880, 1020510, 8897460, 102612510, 33367223274, 249417828660, 9177835927260])

assertis_omega_prime(2))

assert(2383985537862979050.is_omega_prime(14))
assert(239213805711830629680.is_omega_prime(15))
assert(45573558879962759570353.is_omega_prime(12))
assert(15633689593760207970.is_omega_prime(14))
assert(3792821921183752657200.is_omega_prime(15))
assert(1536502117117468999680.is_omega_prime(9))
assert(7423007155473283614010.is_omega_prime(13))
assert(3108276166302017120182510.is_omega_prime(14))
assert(1393807661947063401736092760.is_omega_prime(15))
assert(32749388246772812069108696710.is_omega_prime(16))
assert(1421044357661885128003268103460.is_omega_prime(16))
assert(851452464506763307285599610.is_omega_prime(15))

assert_eq(
    [1, 3, 9, 43, 46, 47, 245, 1697, 109, 565, 3938, 3255, 30089, 18951, 2217].map_kv{|n,k| is_omega_prime(k**(n+1) + 1, n+1) },
    15.of(true)
)

assert_eq(
    [3, 4, 7, 8, 16, 11, 79, 44, 81, 91, 1024, 47, 12769, 389, 256, 413, 46656, 373].map_kv{|n,k| is_omega_prime(k**(n+1) - 1, n+1) },
    18.of(true)
)

assert(is_omega_prime(33577**18 + 1, 18))
assert(!is_omega_prime((2**64 + 1) * 503**3 * 863**2 * 43 * 97, 3))
assert(is_omega_prime((2**64 + 1) * 503**3 * 863**2 * 43 * 97, 6))
assert(is_omega_prime((2**64 + 1) * 503**78, 3))

say "** Test passed!"
