#!/usr/bin/ruby

# See also:
#   https://github.com/danaj/Math-Prime-Util-GMP/issues/19#issuecomment-689614605

# Timings:
#   0.02159 / 1.526s -- 01 March 2023
#   0.0277  / 0.717s -- 13 November 2023

var arr = %n[1001666920738109212575902709396360286042514352001 1012110594434569157062429115537584128764140943941 1045014306533373443979426951497622020057923922017 1053339635277542901010899345783338291109248790397 1053400344885599997752089151986769357812758525937 1081871379459884096368946874775537563065875391017 1093652437904507213581290745663274524416531797041 1111326326575364503929853737779578834322052994561 1160105468636348772676470950966332780191766612381 1164853402616941470960823486334903792568286730581 1169478576761298055203485556414021530255275077301 1206645039289292193855857798633467625911705635841 1230709981603318945493795541656197641321698480761 1249858227955388552172621952068950260834579657669 1295089465568864771332443758603601283497875890441 1304838383343296301351332718210730910418540099841 1323723065416353981603375428865098514128121783361 1334507029210111630558768567633722157546251884101 1362629169634282454513599267651272391228846209217 1442880177970774675837842334714527207189923633869 1475655025160546730551622606442021644112270679581 1515580920309959359771265671703087896731277559641 1517819344312497001926180544481026663014928099129 1521926932974129829697776969925549190313181060557 1542336381807576068282709165067727735884810110289 1546598611732749529621283418149656197571268187553 1551261910023680514454645273402649048862287955721 1574731995185743884014821308633032960819814719569 1630865563514131020833319250139971979917800117421 1641038479262279231165707500928375696326358962157 1648461229604117978436818144599029070464779903929 1681831447460265429243596072201635808698096875649 1752948163568730942357822638245274530189527486541 1825610392070365728978372712765290230661440955241 1847951910976157931493211389688772255047951193121 1903138663218555298168351000223679063729582633301 1911209222087226616683569618504858539960992626101 1919913241024684439596685877567403973543282058301 1938095786159585297692641714373477374208086585361 1941344911803440835628614263078243789281592097241 1994885910112892417160543141259765571778805614661 2041567579338692112276253813884159202251426969997 2049783314896564916876868117066699501952225423981 2129839922067134866556494380192369883070575450501 2146561696218436056136655650699878282366454748281 2153921550813763658169839760863028717577035689833 2203624044194404575862922180971779264731500762717 2218247317880600512417294260919048247299113511381 2233944309943718013191824622665369160096378169781 2291877460499899632700511492044371874891777971457 2465029062723695554153007324360348162804475515017 2473037106959925756860239057942267677618019774681 2745277156012825602281556284656738040889783464701 2763640213912576944085072620932873625647341154521 2781525878829477717443462491849770567577046257909 2812870984645267378355596963245124494600425521657 2834837872265689221159591973972051090944846803221 2933914115067531211877403255056483242129505340781 2958588558258092039064183649324442745172348999681 3036331783303707471021998086475979984828778730281 3044622894467691361709235607515266112644215559401 3045755349211185116524480655187176820199370046001 3112655986018761636081928502811960304256216053141 3140038650652974048084264669324947767490180759401 3146004728993938349512018215525318403366721524501 3183885840035571334933370555973155489870344027021 3274940120537645324110917760321840317634101174301 3369819519162690706759804374277989704673651979201 3374608711503425903437598648571614798488745349001 3410124705414476996252755235856820453742375953189 3413063914973605807767216535616372816114558577001 3506839809456090964601454508584009982749680377813 3545055407797824215369380536693988929811860367501 3582219872788049654049720891506379398755515294517 3723279336104042954266934930116023300418284215149 3734331384397031772649162052629549747209940645597 3778765017211070644104814022496993730588597900621 3978356265983157260557363449101493759316437206221 4070921399205694514991085455665919531988660987681 4114935346333563199713313135889899302903995980909 4605732378143429117200763026985694835368808136041 4627009145422728201125662517453763977431509554461 4628597382885307102176436079395061085576851777161 4674231013678999828735773677094106988680428995521 4688118307742112297259322681536588394082067317661 4808719728984752515646350421803730734219961062177 5281045407121556179684012203107820632629218193957 5533756586028463407915768413007157188396306058441 5556631632876822517900101350388735174138454102201 6037689292710372179297233631303294449526892176881 6069645758796601723856289876082924098356748498001 6341296674807458499093637099287011591861445826381 6534429999507898673000017407903557467204510707301 6568761156248056352259954810963289694632636018681 6771386480990775580312179715003490759761855921981 6894696646475660252604601736929063995956008036921 7341562369327860894456251510215830820576307362873 7532257207318136830404778705770895003274463258697 7655567065331550492775196642353711733296786692061 7851619899896776641436224550272316252088841723541 7993976331927052192557544467545338223696924278321 8280251106061137584586220625003138647763274951181 8449685033958212387156307576687726254356269361741 8485260771445329398023832674936352842514705514661 8564163810400836894868532956777516038429156343081 8969663843722926216153844851511049959695340879201 9023992928207623160019920586218562439943289627781 9080532131427038524494692299923514782247186452601 9655715733910468728935484639465791449163329439161 9771126748633927168995755453641722237353691505501 3769265196358872226828609335838020920585068076701]

var t0 = Time.micro
assert(arr.all { .is_carmichael })
say Time.micro-t0       #=> 0.0257

var euler_psp = %n[11846105220601, 11787118946305, 11942854686721, 11947429473409, 11895460778881, 11993564272201, 11763018376201, 11726700585601, 11915797068001, 11938843869121, 11782909840321, 11707108728481, 11711914051201, 11735087872201, 11728997733601, 11704376290321, 11804525979841, 11816446481281, 11955032369281, 11962347278401, 11859710857345, 11921869396801, 11796972485761, 11768373234241, 11867407350401, 11954309253601, 11863565625601, 11745170498881, 11978470449793, 11746234596097, 11886467536801, 11824683843841, 11725976536561, 11760203836081, 11910616618321, 11749937316481, 11722049028481, 11792963157361, 11891477641681, 11833679819521, 11985185775745, 11823832164761, 11741736293281, 11962611636481, 11807737413121, 11849422475521, 11868672726401, 11938105347001, 11934416938081, 11718539632801, 11856041967841, 11933738942401, 11736597796561, 11786693184001, 11791308616561, 11882859912001, 11836444452001, 11742984880705, 11724391072801, 11784804534721, 11977996841281, 11825235394561, 11892107606401, 11889688331521, 11824244437201, 11740737564865, 11898590650801, 11892286019881, 11766380176801, 11983176825841, 11720158187761, 11855397677761, 11708862566401, 11939571477121, 11733501321361, 11813334086401, 11955540794401, 11857680729601, 11865735463681, 11942183232001, 11904857465761, 11758224782305, 11792068572001, 11836315075201, 11827178509801, 11943915984001, 11826066874721, 11964205016401, 11768440673809, 11808781508161, 11807425586881, 11881866759841, 11804990315041, 11806263563329, 11916533270305, 11929863591361, 11937768750721, 11718967304161, 11802603869281, 11767014901153, 11738640039841]

assert(euler_psp.all { .is_carmichael })
assert(euler_psp.all { .is_abs_euler_psp })

assert(!89510647.is_carmichael)
assert(!8564063119.is_carmichael)
assert(!3950724150310343803.is_carmichael)
assert(!26785364118808232859131739702799777920687253731229.is_carmichael)
assert(!9398873706489062452695433546000611762846830565901820821969953582604175740521957921840450221083170017.is_carmichael)

assert_eq(
    arr.grep{.is_abs_euler_psp},
    %n[1001666920738109212575902709396360286042514352001, 1045014306533373443979426951497622020057923922017, 1053400344885599997752089151986769357812758525937, 1081871379459884096368946874775537563065875391017, 1093652437904507213581290745663274524416531797041, 1111326326575364503929853737779578834322052994561, 1206645039289292193855857798633467625911705635841, 1230709981603318945493795541656197641321698480761, 1295089465568864771332443758603601283497875890441, 1304838383343296301351332718210730910418540099841, 1323723065416353981603375428865098514128121783361, 1362629169634282454513599267651272391228846209217, 1515580920309959359771265671703087896731277559641, 1517819344312497001926180544481026663014928099129, 1542336381807576068282709165067727735884810110289, 1546598611732749529621283418149656197571268187553, 1551261910023680514454645273402649048862287955721, 1574731995185743884014821308633032960819814719569, 1648461229604117978436818144599029070464779903929, 1681831447460265429243596072201635808698096875649, 1825610392070365728978372712765290230661440955241, 1847951910976157931493211389688772255047951193121, 1938095786159585297692641714373477374208086585361, 1941344911803440835628614263078243789281592097241, 2146561696218436056136655650699878282366454748281, 2153921550813763658169839760863028717577035689833, 2291877460499899632700511492044371874891777971457, 2465029062723695554153007324360348162804475515017, 2473037106959925756860239057942267677618019774681, 2763640213912576944085072620932873625647341154521, 2812870984645267378355596963245124494600425521657, 2958588558258092039064183649324442745172348999681, 3036331783303707471021998086475979984828778730281, 3044622894467691361709235607515266112644215559401, 3045755349211185116524480655187176820199370046001, 3140038650652974048084264669324947767490180759401, 3369819519162690706759804374277989704673651979201, 3374608711503425903437598648571614798488745349001, 3413063914973605807767216535616372816114558577001, 4070921399205694514991085455665919531988660987681, 4605732378143429117200763026985694835368808136041, 4628597382885307102176436079395061085576851777161, 4674231013678999828735773677094106988680428995521, 4808719728984752515646350421803730734219961062177, 5533756586028463407915768413007157188396306058441, 5556631632876822517900101350388735174138454102201, 6037689292710372179297233631303294449526892176881, 6069645758796601723856289876082924098356748498001, 6568761156248056352259954810963289694632636018681, 6894696646475660252604601736929063995956008036921, 7341562369327860894456251510215830820576307362873, 7532257207318136830404778705770895003274463258697, 7993976331927052192557544467545338223696924278321, 8564163810400836894868532956777516038429156343081, 8969663843722926216153844851511049959695340879201, 9080532131427038524494692299923514782247186452601, 9655715733910468728935484639465791449163329439161]
)

with (2059832906607460252767290568443059994787898033540634712711845135488141590979778401392385) {|n|
    assert(n.is_carmichael)
    assert(!n.is_abs_euler_psp)
    assert(!n.is_imprimitive_carmichael)
}

with (742738189777086442886204477984996833523559707217818002340574410192204739214228137592918025176732797705628101056762772300625218702414652520252414884396367396909893568725658367182245586873653595022942255311082392730595053341904897439853976520069754580387304854830626672105172017312013130155209988268739544525029187342401104963455482504129399525922179585) {|n|
    assert(n.is_carmichael)
    assert(n.is_abs_euler_psp)
    assert(!n.is_imprimitive_carmichael)
}

with(293704261822873968440328001567322976674825399839117774762673364098772284012658575519736143477741827196948158314218308343078251272252678808701963761138092032734875068048169405766629056803483149710379521966472204505650851796616510647719125110332703342712654897625331221299419872841467740291599817033329358258899823776277457145596877713813274648257753794198816415050929236864597071110063166219083719708990177337345) { |n|
    assert(n.is_carmichael)
    assert(n.is_abs_euler_psp)
    assert(!n.is_imprimitive_carmichael)
}

with (85474748242379385366094816268973624888150242213226622180749138318386315935863212081942773317297904345474600957207428590062778602152519956800727219132027890643383467070099011582284945709124001108514764722966245494493169941622314836646386558535398146857006553207552461902964756053556805850282748662504578139090961477044287402823322355055911488039369571766331538282989461368172866093039969460784972736481613017667409050543252201255683285242294097740381698721) {|n|
    assert(!n.is_carmichael)
}

with (111752741147928878460543122185614013584493764844954493341714777557828905006762368931787841) {|n|
    assert(n.is_carmichael)
    assert(n.is_abs_euler_psp)
    assert(n.is_imprimitive_carmichael)
}
