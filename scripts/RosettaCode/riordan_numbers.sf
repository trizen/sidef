#!/usr/bin/ruby

#
## https://rosettacode.org/wiki/Riordan_numbers
#

func riordan(n) is cached {
    return 1 if (n == 0)
    return 0 if (n == 1)
    (n-1) * (2*__FUNC__(n-1) + 3*__FUNC__(n-2)) / (n+1)
}

say 32.of(riordan)

assert_eq(
    50.of(riordan),
    %n[1, 0, 1, 1, 3, 6, 15, 36, 91, 232, 603, 1585, 4213, 11298, 30537, 83097, 227475, 625992, 1730787, 4805595, 13393689, 37458330, 105089229, 295673994, 834086421, 2358641376, 6684761125, 18985057351, 54022715451, 154000562758, 439742222071, 1257643249140, 3602118427251, 10331450919456, 29671013856627, 85317692667643, 245613376802185, 707854577312178, 2042162142208813, 5897493615536452, 17047255430494497, 49320944483427000, 142816973618414817, 413887836110423787, 1200394300050487935, 3484084625456932134, 10119592485062548155, 29412628894558563849, 85543870540455597789, 248952602654003411640]
)
