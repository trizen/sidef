#!/usr/bin/ruby

# Find all the non-negative solutions to the quadratic congruence:
#   x^2 = a (mod n)

var tests = [
        [900, 1280]
        [880, 1632]
        [784, 3360]
        [1072, 3872]
        [4624, 5728]
        [4356, 6399]
        [6736, 7776]
        [4410, 7911]
        [2115, 8181]
        [2148, 8448]
        [3056, 8864]
        [112, 8992]
        [17640, 48465]
        [3500, 5528]
        [5577, 9726]
        [8345, 9646]
        [1052, 1336]
        [4484, 5864]
        [4804983375906829936226851, 11392163240756069707031250]
    ]

for a,n in (tests) {
    assert_eq(sqrtmod(a, n)**2 % n, a)
}

assert_eq(
    sqrtmod_all(1, 8),
    %n[1, 3, 5, 7]
)

assert_eq(
    sqrtmod_all(120, 5045),
    %n[1165, 3880]
)

assert_eq(
    sqrtmod_all(4095, 8469),
    %n[1110, 1713, 3933, 4536, 6756, 7359]
)

assert_eq(
    sqrtmod_all(-1, 13**18 * 5**7)
    %n(633398078861605286438568 2308322911594648160422943 6477255756527023177780182 8152180589260066051764557)
)

assert_eq(
    sqrtmod_all(2466, 5967),
    %n[120 237 426 543 1446 1563 1752 1869 2109 2226 2415 2532 3435 3552 3741 3858 4098 4215 4404 4521 5424 5541 5730 5847]
)

assert_eq(
    sqrtmod_all(7281, 9954),
    %n(1233 1611 1707 2085 4551 4929 5025 5403 7869 8247 8343 8721)
)
assert_eq(
    sqrtmod_all(1701, 6300),
    %n[399, 651, 1449, 1701, 2499, 2751, 3549, 3801, 4599, 4851, 5649, 5901]
)

assert_eq(
    sqrtmod_all(306, 810),
    %n[66, 96, 174, 204, 336, 366, 444, 474, 606, 636, 714, 744]
)

assert_eq(
    sqrtmod_all(2754, 6561),
    %n[126, 603, 855, 1332, 1584, 2061, 2313, 2790, 3042, 3519, 3771, 4248, 4500, 4977, 5229, 5706, 5958, 6435]
)

assert_eq(
    sqrtmod_all(3500, 5528),
    %n[638 2126 3402 4890]
)

assert_eq(
    sqrtmod_all(17640, 48465),
    %n[2865, 7905, 8250, 13290, 19020, 24060, 24405, 29445, 35175, 40215, 40560, 45600]
)

assert_eq(
    sqrtmod_all(1052, 1336),
    %n[102 566 770 1234]
)

assert_eq(
    sqrtmod_all(4484, 5864),
    %n[934 1998 3866 4930]
)

assert_eq(
    sqrtmod_all(8345, 9646),
    %n[1149 3375 3515 3905 5741 6131 6271 8497]
)

assert_eq(sqrtmod_all(611, 1324), [])
assert_eq(sqrtmod_all(1875, 6196), [])

for n in (0..33), a in (^n) {

    var roots = sqrtmod_all(a, n)

    assert(roots.all {|r|
        mulmod(r, r, n) == a
    }, "sqrtmod(#{a}, #{n}) = #{roots}")

    assert_eq(
        ^n -> grep {|k| mulmod(k, k, n) == a },
        roots,
    )
}

for a,m in (
[
    [10, 13],
    [10, 13**2],
    [10, 13**3],
    [10, 13**4],
    [44, 43*97],
    [938, 1771],
    [1313, 3808],
    [544, 800],
    [436, 1752],
    [289, 992],
    [841, 905],
    [441, 920],
    [993, 2048],
    [13**18 * 5**7 - 1, 13**18 * 5**7]
]) {
    assert_eq(Mod(sqrtmod(a, m), m)**2, a, "sqrtmod(#{a}, #{m}) = #{sqrtmod(a, m)}, which is incorrect")
    sqrtmod_all(a,m).each {|r| assert_eq(Mod(r, m)**2, a, "sqrtmod_all(#{a}, #{m}) = #{r}, which is incorrect") }
}

assert_eq(
    sqrtmod_all(4804983375906829936226851, 11392163240756069707031250),
    %n[1252076777795309517603449, 1364537588553642767552801, 2789427526547858716822199, 2901888337306191966771551, 3022865529324307310572199, 3135326340082640560521551, 3794129732344184576197199, 3906590543102517826146551, 4177433197372004888697199, 4289894008130338138646551, 4560216278076856509790949, 4672677088835189759740301, 5331480481096733775415949, 5443941291855067025365301, 5564918483873182369165949, 5677379294631515619115301, 5714783946124554087915949, 5827244756882887337865301, 5948221948901002681665949, 6060682759659335931615301, 6719486151920879947290949, 6831946962679213197240301, 7102269232625731568384699, 7214730043384064818334051, 7485572697653551880884699, 7598033508411885130834051, 8256836900673429146509699, 8369297711431762396459051, 8490274903449877740259699, 8602735714208210990209051, 10027625652202426939478449, 10140086462960760189427801]
)

assert_eq(solve_quadratic_form(13, 97)           , [])
assert_eq(solve_quadratic_form(14, 30),          , [[4, 1]])
assert_eq(solve_quadratic_form(12, 97)           , [[7, 2]])
assert_eq(solve_quadratic_form(14, 3*5*7)        , [[7, 2]])
assert_eq(solve_quadratic_form(18, 43*97)        , [[61, 5], [11, 15]])
assert_eq(solve_quadratic_form( 5, 3*5*7)        , [[10, 1], [5, 4]])
assert_eq(solve_quadratic_form(1234, 1810585219) , [[41087, 315]])
assert_eq(solve_quadratic_form(14, 2**127 - 1)   , [[10229855171020855649, 2162856025860368397]])
assert_eq(solve_quadratic_form(18, 2**127 - 1)   , [])
assert_eq(solve_quadratic_form( 1, 99025)        , [[256, 183], [297, 104], [312, 41], [311, 48]])        # XXX: not all solutions

say "** Test passed!"
